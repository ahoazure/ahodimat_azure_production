# Generated by Django 3.0.14 on 2023-12-20 12:50

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='WorldBankIndicators',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('code', models.CharField(default=None, max_length=45, verbose_name='Indicator Code')),
                ('name', models.CharField(default=None, max_length=255, verbose_name='Indicator Name')),
                ('reference', models.CharField(blank=True, default='World Bank Development Indicators', max_length=100, null=True, verbose_name='Indicator Reference')),
            ],
            options={
                'verbose_name': 'Indicator',
                'verbose_name_plural': 'Indicators',
                'db_table': 'worldbank_indicators',
                'ordering': ('name',),
                'managed': True,
                'unique_together': {('code', 'name')},
            },
        ),
        migrations.CreateModel(
            name='WorldBankCountries',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('code', models.CharField(default=None, max_length=45, verbose_name='Country Code')),
                ('name', models.CharField(default=None, max_length=255, verbose_name='Country Name')),
                ('latitude', models.DecimalField(blank=True, decimal_places=12, max_digits=15, null=True, validators=[django.core.validators.RegexValidator(message='Enter valid Latitude', regex='^[-+]?([1-8]?\\d(\\.\\d+)?|90(\\.0+)?)$')], verbose_name='Latitude')),
                ('longitude', models.DecimalField(blank=True, decimal_places=12, max_digits=15, null=True, validators=[django.core.validators.RegexValidator(message='Enter valid Longitude', regex='^[-+]?(180(\\.0+)?|((1[0-7]\\d)|([1-9]?\\d))(\\.\\d+)?)$')], verbose_name='Longitude')),
                ('region', models.CharField(blank=True, max_length=45, null=True, verbose_name='Region')),
                ('incomelevel', models.CharField(blank=True, max_length=45, null=True, verbose_name='Income Level')),
                ('capital', models.CharField(blank=True, max_length=45, null=True, verbose_name='Capital City')),
            ],
            options={
                'verbose_name': 'Country',
                'verbose_name_plural': 'Countries',
                'db_table': 'worldbank_countries',
                'ordering': ('name',),
                'managed': True,
                'unique_together': {('code', 'name')},
            },
        ),
        migrations.CreateModel(
            name='WBGMainConfigs',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('wbapi_url', models.CharField(max_length=200, validators=[django.core.validators.RegexValidator(message="Valid URL:'https://abc.com; or http://abc.com:8000'", regex='https?:\\/\\/(?:w{1,3}\\.)?[^\\s.]+(?:\\.[a-z]+)*(?::\\d+)?(?![^<]*(?:<\\/\\w+>|\\/?>))')], verbose_name='World Bank API Base URL')),
                ('wbapi_user', models.CharField(blank=True, max_length=200, null=True, verbose_name='Username')),
                ('wbapi_passkey', models.CharField(blank=True, max_length=300, null=True, verbose_name='Password')),
                ('status', models.BooleanField(choices=[(1, 'Active'), (0, 'Innactive')], default=1, verbose_name='Status')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL, verbose_name='GHO User/Email')),
            ],
            options={
                'verbose_name': 'URL Setup',
                'verbose_name_plural': ' WBGAPI URL',
                'db_table': 'worldbank_main_configs',
                'managed': True,
            },
        ),
    ]
